description = "Generate comprehensive test suites using git_mcp_server tools for project context"
prompt = '''
# ðŸ§ª Test Generation

**Focus:** {{args}}

Generate comprehensive test suites for implemented functionality.

## Test Strategy

1. **Unit Tests** - test individual functions and methods
2. **Integration Tests** - test component interactions
3. **Edge Cases** - test boundary conditions and error scenarios
4. **Mock External Dependencies** - isolate components for testing
5. **Test Coverage** - ensure comprehensive coverage

## Test Types

- **Happy Path Tests** - normal operation scenarios
- **Error Handling Tests** - exception and error conditions
- **Boundary Tests** - edge cases and limits
- **Integration Tests** - component interactions
- **Performance Tests** - if applicable

Use `get_project_details()` to understand testing frameworks and `list_merge_requests()` to review existing test patterns in the codebase.

Use `/doc` after testing to update documentation.
'''
