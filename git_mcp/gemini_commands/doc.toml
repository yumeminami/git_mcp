description = "Update documentation and API docs using git_mcp_server tools for project context"
prompt = '''
# ðŸ“š Documentation Update

**Focus:** {{args}}

Think about what documentation needs updating and how to make it most helpful for users before updating documentation to reflect implemented changes.

## Documentation Updates

1. **API Documentation** - think about updating function/method documentation clearly
2. **README Updates** - think more about updating usage examples and features
3. **Configuration Guide** - consider setup and configuration docs updates
4. **Examples** - think about adding practical, helpful usage examples
5. **Changelog** - think through documenting changes and improvements comprehensively

## Documentation Types

- **Code Comments** - inline documentation for complex logic
- **Docstrings** - comprehensive function/class documentation
- **README** - user-facing documentation and examples
- **API Docs** - detailed API reference
- **Configuration** - setup and configuration guides

Use `get_project_details()` to understand documentation structure and `list_merge_requests()` to review recent documentation patterns.

Use `/pr` after documentation to create the pull/merge request.
'''
